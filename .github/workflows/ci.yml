name: CI

on: [push]

env:
  CACHE_VERSION: 2
  PRE_COMMIT_CACHE: ~/.cache/pre-commit
  PYTHON_VERSION: "3.10"

jobs:
  info:
    name: Collect information & changes data
    outputs:
      pre-commit_cache_key: ${{ steps.generate_pre-commit_cache_key.outputs.key }}
      python_chache_key: ${{ steps.generate_python_cache_key.outputs.key }}
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.2
      - name: Generate partial pre-commit restore key
        id: generate_pre-commit_cache_key
        run: >-
          echo "key=pre-commit-${{ env.CACHE_VERSION }}-${{
            hashFiles('.pre-commit-config.yaml') }}"  >> $GITHUB_OUTPUT
      - name: Generate partial Python venv restore key
        id: generate_python_cache_key
        run: >-
          echo "key=venv-${{ env.CACHE_VERSION }}-${{
            hashFiles('requirements.txt') }}-${{
            hashFiles('requirements_dev.txt') }}" >> $GITHUB_OUTPUT

  pre-commit:
    name: Prepare pre-commit base
    runs-on: ubuntu-22.04
    needs:
      - info
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        id: python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true
      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.2
        with:
          path: venv
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{
              needs.info.outputs.pre-commit_cache_key }}
      - name: Create Python virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          python --version
          pip install -r requirements_dev.txt
      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          lookup-only: true
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
              needs.info.outputs.pre-commit_cache_key }}
      - name: Install pre-commit dependencies
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          . venv/bin/activate
          pre-commit install-hooks

  linting:
    name: Run linting
    runs-on: ubuntu-22.04
    needs:
      - info
      - pre-commit
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        id: python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true
      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache/restore@v4.0.2
        with:
          path: venv
          fail-on-cache-miss: true
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{
              needs.info.outputs.pre-commit_cache_key }}
      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache/restore@v4.0.2
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          fail-on-cache-miss: true
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
              needs.info.outputs.pre-commit_cache_key }}

      - name: Run codespell
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual codespell --all-files --show-diff-on-failure

      - name: Run check-toml
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual check-toml --all-files --show-diff-on-failure

      - name: Run check-yaml
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual check-yaml --all-files --show-diff-on-failure

      - name: Run shellcheck
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual shellcheck --all-files --show-diff-on-failure

      - name: Run rstcheck
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual rstcheck --all-files --show-diff-on-failure

      - name: Python Lint
        id: python-lint
        run: |
          . venv/bin/activate

          pre-commit run --hook-stage manual isort --all-files --show-diff-on-failure
          pre-commit run --hook-stage manual black --all-files --show-diff-on-failure
          pre-commit run --hook-stage manual flake8 --all-files --show-diff-on-failure
          pre-commit run --hook-stage manual bandit --all-files --show-diff-on-failure
          pre-commit run --hook-stage manual pylint --all-files --show-diff-on-failure

      - name: Register hadolint problem matcher
        run: |
          echo "::add-matcher::.github/workflows/matchers/hadolint.json"
      - name: Check Dockerfile
        uses: docker://hadolint/hadolint:v1.18.2
        with:
          args: hadolint .devcontainer/Dockerfile

  pytest:
    runs-on: ubuntu-latest
    needs:
      - linting
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Check out code from github
        uses: actions/checkout@v4.1.2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
      - name: Run tests
        run: |
          python --version
          python -m pytest --cov=srpenergy --cov-report=xml  \
            -o console_output_style=count \
            -p no:sugar \
            tests

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs:
      - linting
    steps:
      - name: Check out code from github
        uses: actions/checkout@v4.1.2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        id: python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true
      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache/restore@v4.0.2
        with:
          path: venv
          fail-on-cache-miss: true
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{
              needs.info.outputs.pre-commit_cache_key }}
      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache/restore@v4.0.2
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          fail-on-cache-miss: true
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
              needs.info.outputs.pre-commit_cache_key }}

      - name: Test Coverage
        run: |
          . venv/bin/activate
          python -m pytest --cov=srpenergy --cov-report=xml  \
            -o console_output_style=count \
            -p no:sugar \
            tests
      - name: Report Coverage
        if: startsWith(runner.os, 'Linux')
        run: curl -sL https://coveralls.io/coveralls-linux.tar.gz | tar -xz && ./coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
